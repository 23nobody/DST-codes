#include<stdio.h>
struct node {
    int data;
    struct node* next;
};
void insertbeginning(struct node **start, int a)
{
    struct node* p=(struct node*)malloc(sizeof(struct node));
    p->data= a;
    p->next=*start;
    *start=p;
}
void insertlast(struct node **head, int a)
{
    struct node* k= *head;
    struct node* p=(struct node*)malloc(sizeof(struct node));
    p->data =a;
    p->next=NULL;
    while(k->next!=NULL)
    {
        k=k->next;
        
    }
    k->next=p;
    
}
void printlist(struct node* p)
{
    while(p!=NULL)
    {
        printf("%d ", p->data);
        p=p->next;
    }
}
int main()
{
    int t;
    scanf("%d", &t);
    for(;t>0;t--)
    {
        int n,i;
        scanf("%d", &n);
        int a;
        scanf("%d", &a);
        struct node* head=NULL;
        insertbeginning(&head, a);
        for(i=1;i<n;i++)
        {
            scanf("%d", &a);
            insertlast(&head, a);
        }
        //printlist(head);
        struct node* k=head;
        struct node* even=NULL;
        struct node* odd=NULL;
        int eve=0;int od=0;
        while(k!=NULL)
        {
            if((k->data)%2==0)
            {
                if(eve==0)
                {
                    insertbeginning(&even, k->data);
                    eve++;
                }
                else
                {
                    insertlast(&even, k->data);
                }
            }
            else
            {
                if(od==0)
                {
                    insertbeginning(&odd, k->data);
                    od++;
                }
                else
                {
                    insertlast(&odd, k->data);
                }
            }
            k=k->next;
        }
        //printlist(even);
        //printlist(odd);
        k=odd;
        while(k->next!=NULL)
        {
            k=k->next;
        }
        k->next=even;
        printlist(odd);
        printf("\n");
    }
    return 0;
}